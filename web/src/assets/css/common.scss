* {
	box-sizing: border-box;
	outline: none;
}

html {
	font-size: 13px;
}

body {
	margin: 0;
	padding: 0;
	font-family: Arial, Helvetica, sans-serif;
	line-height: 1.2em;
	background-color: #f1f1f1;
}

a {
	color: #999;
}

// color
$colors: (
	'primary': #db9e3f,
	'blue': #4394e4,
	'danger': #df236b,
	'info': #5d667c,
	'white': #fff,
	'light-1': #f9f9f9,
	'light': #d4d9de,
	'grey-1': #999,
	'grey': #666,
	'dark-1': #333,
	'dark': #222,
	'black': #000
);

@each $colorKey, $colorVal in $colors {
	// .text-primary
	.text-#{$colorKey} {
		color: $colorVal;
	}

	// .bg-primary
	.bg-#{$colorKey} {
		background-color: $colorVal;
	}
}

// overflow
.text-ellipsis {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

// text-align
@each $var in (left, center, right) {
	// .text-center
	.text-#{$var} {
		text-align: $var !important;
	}
}

// font-size
$base-font-size: 1rem;
$font-size: (
	// 8px
		xxs: 0.6154,
	// 10px
		xs: 0.7692,
	// 12px
		sm: 0.9231,
	// 13px
		md: 1,
	// 14px
		lg: 1.0769,
	// 16px
		xl: 1.2308
);

@each $sizeKey, $sizeVal in $font-size {
	// .fs-xs
	.fs-#{$sizeKey} {
		font-size: $sizeVal * $base-font-size;
	}
}

// flex
.d-flex {
	display: flex;
}

.flex-column {
	flex-direction: column;
}

.flex-1 {
	flex: 1;
}

.flex-wrap {
	flex-wrap: wrap;
}

$flex-jt: (
	start: flex-start,
	end: flex-end,
	center: center,
	between: space-between,
	around: space-around
);

@each $flexKey, $flexVal in $flex-jt {
	// .jt-start
	.jt-#{$flexKey} {
		justify-content: $flexVal;
	}
}

$flex-ai: (
	start: flex-start,
	end: flex-end,
	center: center,
	stretch: stretch
);

@each $flexKey, $flexVal in $flex-ai {
	// .ai-start
	.ai-#{$flexKey} {
		align-items: $flexVal;
	}
}

// margin, padding
$spacing-types: (
	m: margin,
	p: padding
);

$spacing-directions: (
	t: top,
	b: bottom,
	l: left,
	r: right
);

$spacing-sizes: (
	0: 0,
	1: 0.25,
	2: 0.5,
	3: 1,
	4: 1.5,
	5: 3
);

$base-spaing-size: 1rem;

@each $typeKey, $typeVal in $spacing-types {
	@each $sizeKey, $sizeVal in $spacing-sizes {
		// .m-0, .p-0
		.#{$typeKey}-#{$sizeKey} {
			#{$typeVal}: $sizeVal * $base-spaing-size;
		}

		// mx-0,
		.#{$typeKey}x-#{$sizeKey} {
			#{$typeVal}-left: $sizeVal * $base-spaing-size;
			#{$typeVal}-right: $sizeVal * $base-spaing-size;
		}

		// my-0,
		.#{$typeKey}y-#{$sizeKey} {
			#{$typeVal}-top: $sizeVal * $base-spaing-size;
			#{$typeVal}-bottom: $sizeVal * $base-spaing-size;
		}
	}

	@each $directionKey, $directionVal in $spacing-directions {
		@each $sizeKey, $sizeVal in $spacing-sizes {
			// .mt-0, pt-0
			.#{$typeKey}#{$directionKey}-#{$sizeKey} {
				#{$typeVal}-#{$directionVal}: $sizeVal * $base-spaing-size;
			}
		}
	}
}

// button
.btn {
	border: none;
	border-radius: 0.1538rem;
	font-size: map-get($map: $font-size, $key: 'md') * $base-font-size;
	height: 1.7rem;
}

// tabbar
.nav-link {
	border: 1px solid transparent;
	&.active {
		border-bottom: 0.25rem solid map-get($map: $colors, $key: 'white');
	}
	&.active-inverse {
		color: map-get($map: $colors, $key: 'primary');
		border-bottom: 0.25rem solid map-get($map: $colors, $key: 'primary');
	}
}

.width-100 {
	width: 100%;
}

.height-100 {
	height: 100%;
}

// border

.divider {
	border-bottom: 0.1154rem solid map-get($map: $colors, $key: 'light');
}

.bb-1 {
	border-bottom: 0.1154rem solid map-get($map: $colors, $key: 'light');
}
.bl-1 {
	border-left: 0.1154rem solid map-get($map: $colors, $key: 'light');
}
.bt-1 {
	border-top: 0.1154rem solid map-get($map: $colors, $key: 'light');
}

.br-1 {
	border-right: 0.1154rem solid map-get($map: $colors, $key: 'light');
}

.br-2 {
	border-right: 0.1154rem solid map-get($map: $colors, $key: 'dark-1');
}

.text-bold {
	font-weight: bold;
}
